root = true
[*]
indent_style = space
trim_trailing_whitespace = true
insert_final_newline = true

# ReSharper properties
resharper_autodetect_indent_settings = true
resharper_blank_lines_around_single_line_type = 0
resharper_blank_lines_before_single_line_comment = 1
resharper_braces_for_ifelse = required
resharper_braces_redundant = false
resharper_csharp_blank_lines_inside_region = 0
resharper_csharp_keep_blank_lines_in_code = 1
resharper_csharp_keep_blank_lines_in_declarations = 1
resharper_csharp_keep_existing_enum_arrangement = true
resharper_csharp_keep_existing_expr_member_arrangement = false
resharper_csharp_keep_existing_primary_constructor_declaration_parens_arrangement = false
resharper_csharp_keep_existing_switch_expression_arrangement = false
resharper_csharp_place_constructor_initializer_on_same_line = false
resharper_csharp_place_simple_case_statement_on_same_line = if_owner_is_single_line
resharper_csharp_place_type_constraints_on_same_line = false
resharper_csharp_wrap_after_invocation_lpar = true
resharper_csharp_wrap_array_initializer_style = chop_if_long
resharper_csharp_wrap_before_binary_pattern_op = false
resharper_csharp_wrap_before_extends_colon = true
resharper_csharp_wrap_before_first_type_parameter_constraint = true
resharper_csharp_wrap_before_primary_constructor_declaration_lpar = false
resharper_csharp_wrap_chained_binary_expressions = chop_if_long
resharper_csharp_wrap_chained_binary_patterns = chop_if_long
resharper_csharp_wrap_chained_method_calls = chop_if_long
resharper_csharp_wrap_enum_declaration = chop_if_long
resharper_csharp_wrap_extends_list_style = chop_if_long
resharper_csharp_wrap_list_pattern = chop_if_long
resharper_csharp_max_line_length = 120
resharper_csharp_remove_blank_lines_near_braces_in_code = true
resharper_csharp_wrap_after_declaration_lpar = true
resharper_csharp_wrap_arguments_style = chop_if_long
resharper_csharp_wrap_parameters_style = chop_if_long
resharper_default_private_modifier = implicit
resharper_default_value_when_type_not_evident = default_expression
resharper_enforce_line_ending_style = true
resharper_formatter_off_tag = @formatter:off
resharper_formatter_on_tag = @formatter:on
resharper_formatter_tags_enabled = true
resharper_keep_existing_declaration_block_arrangement = true
resharper_keep_existing_declaration_parens_arrangement = false
resharper_keep_existing_embedded_arrangement = false
resharper_keep_existing_embedded_block_arrangement = true
resharper_keep_existing_enum_arrangement = false
resharper_keep_existing_expr_member_arrangement = false
resharper_keep_existing_invocation_parens_arrangement = false
resharper_keep_existing_linebreaks = false
resharper_keep_existing_list_patterns_arrangement = false
resharper_keep_existing_primary_constructor_declaration_parens_arrangement = false
resharper_keep_existing_property_patterns_arrangement = false
resharper_keep_existing_switch_expression_arrangement = false
resharper_max_array_initializer_elements_on_line = 10
resharper_max_formal_parameters_on_line = 8
resharper_max_invocation_arguments_on_line = 10
resharper_max_primary_constructor_parameters_on_line = 8
resharper_nested_ternary_style = compact
resharper_new_line_before_while = true
resharper_place_accessorholder_attribute_on_same_line = false
resharper_place_accessor_attribute_on_same_line = false
resharper_place_constructor_initializer_on_same_line = false
resharper_place_expr_accessor_on_single_line = true
resharper_place_expr_method_on_single_line = if_owner_is_single_line
resharper_place_expr_property_on_single_line = if_owner_is_single_line
resharper_place_field_attribute_on_same_line = false
resharper_place_linq_into_on_new_line = false
resharper_place_simple_accessorholder_on_single_line = true
resharper_place_simple_case_statement_on_same_line = if_owner_is_single_line
resharper_remove_blank_lines_near_braces_in_code = true
resharper_space_within_single_line_array_initializer_braces = true
resharper_trailing_comma_in_multiline_lists = true
resharper_use_heuristics_for_body_style = false
resharper_use_indent_from_vs = false
resharper_wrap_arguments_style = chop_if_long
resharper_wrap_array_initializer_style = chop_if_long
resharper_wrap_before_arrow_with_expressions = true
resharper_wrap_before_binary_pattern_op = false
resharper_wrap_before_extends_colon = true
resharper_wrap_before_primary_constructor_declaration_rpar = false
resharper_wrap_chained_binary_expressions = chop_if_long
resharper_wrap_chained_binary_patterns = chop_if_long
resharper_wrap_chained_method_calls = chop_if_long
resharper_wrap_enum_declaration = chop_if_long
resharper_wrap_list_pattern = chop_if_long
resharper_xmldoc_indent_text = ZeroIndent
resharper_xmldoc_max_line_length = 120
resharper_xmldoc_space_before_self_closing = false

# Microsoft .NET properties
csharp_new_line_before_members_in_object_initializers = true
csharp_style_namespace_declarations = file_scoped:warning
csharp_style_prefer_utf8_string_literals = true:suggestion
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:warning

# Non-private static fields are PascalCase
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.symbols = non_private_static_fields
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.style = non_private_static_field_style

dotnet_naming_symbols.non_private_static_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_static_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected
dotnet_naming_symbols.non_private_static_fields.required_modifiers = static

dotnet_naming_style.non_private_static_field_style.capitalization = pascal_case

# Non-private readonly fields are PascalCase
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.symbols = non_private_readonly_fields
dotnet_naming_rule.non_private_readonly_fields_should_be_pascal_case.style = non_private_readonly_field_style

dotnet_naming_symbols.non_private_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_readonly_fields.applicable_accessibilities = public, protected, internal, protected_internal, private_protected
dotnet_naming_symbols.non_private_readonly_fields.required_modifiers = readonly

dotnet_naming_style.non_private_readonly_field_style.capitalization = pascal_case

# Constants are PascalCase
dotnet_naming_rule.constants_should_be_pascal_case.severity = warning
dotnet_naming_rule.constants_should_be_pascal_case.symbols = constants
dotnet_naming_rule.constants_should_be_pascal_case.style = constant_style

dotnet_naming_symbols.constants.applicable_kinds = field, local
dotnet_naming_symbols.constants.required_modifiers = const

dotnet_naming_style.constant_style.capitalization = pascal_case

# Static fields are camelCase and start with s_
dotnet_naming_rule.non_public_static_fields_should_be_camel_case.severity = warning
dotnet_naming_rule.non_public_static_fields_should_be_camel_case.symbols = static_fields
dotnet_naming_rule.non_public_static_fields_should_be_camel_case.style = static_field_style

dotnet_naming_symbols.static_fields.applicable_kinds = field
dotnet_naming_symbols.static_fields.required_modifiers = static

dotnet_naming_style.static_field_style.capitalization = camel_case
dotnet_naming_style.static_field_style.required_prefix = s_

# Instance fields are camelCase and start with _
dotnet_naming_rule.instance_fields_should_be_camel_case.severity = warning
dotnet_naming_rule.instance_fields_should_be_camel_case.symbols = instance_fields
dotnet_naming_rule.instance_fields_should_be_camel_case.style = instance_field_style

dotnet_naming_symbols.instance_fields.applicable_kinds = field

dotnet_naming_style.instance_field_style.capitalization = camel_case
dotnet_naming_style.instance_field_style.required_prefix = _

# Locals and parameters are camelCase
dotnet_naming_rule.locals_should_be_camel_case.severity = warning
dotnet_naming_rule.locals_should_be_camel_case.symbols = locals_and_parameters
dotnet_naming_rule.locals_should_be_camel_case.style = camel_case_style

dotnet_naming_symbols.locals_and_parameters.applicable_kinds = parameter, local

dotnet_naming_style.camel_case_style.capitalization = camel_case

# Local functions are PascalCase
dotnet_naming_rule.local_functions_should_be_pascal_case.severity = warning
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_pascal_case.style = local_function_style

dotnet_naming_symbols.local_functions.applicable_kinds = local_function

dotnet_naming_style.local_function_style.capitalization = pascal_case

# By default, name items with PascalCase
dotnet_naming_rule.members_should_be_pascal_case.severity = warning
dotnet_naming_rule.members_should_be_pascal_case.symbols = all_members
dotnet_naming_rule.members_should_be_pascal_case.style = pascal_case_style

dotnet_naming_symbols.all_members.applicable_kinds = class, delegate, enum, event, field, interface, local, local_function, method, namespace, parameter, property, struct

dotnet_naming_style.pascal_case_style.capitalization = pascal_case

# ReSharper inspection severities
resharper_arrange_accessor_owner_body_highlighting = none
resharper_arrange_attributes_highlighting = hint
resharper_arrange_default_value_when_type_evident_highlighting = warning
resharper_arrange_default_value_when_type_not_evident_highlighting = warning
resharper_arrange_object_creation_when_type_evident_highlighting = warning
resharper_arrange_object_creation_when_type_not_evident_highlighting = warning
resharper_arrange_redundant_parentheses_highlighting = none
resharper_arrange_this_qualifier_highlighting = none
resharper_arrange_trailing_comma_in_multiline_lists_highlighting = warning
resharper_built_in_type_reference_style_for_member_access_highlighting = none
resharper_built_in_type_reference_style_highlighting = none
resharper_razor_assembly_not_resolved_highlighting = warning
resharper_redundant_base_qualifier_highlighting = none
resharper_redundant_using_directive_highlighting = error
resharper_suggest_var_or_type_elsewhere_highlighting = none
resharper_suggest_var_or_type_simple_types_highlighting = none
resharper_web_config_module_not_resolved_highlighting = warning
resharper_web_config_type_not_resolved_highlighting = warning
resharper_web_config_wrong_module_highlighting = warning

# XML project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# XML config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

# Code files
[*.{cs,csx,vb,vbx,DotSettings}]
indent_size = 4

###############################
# .NET Coding Conventions     #
###############################
[*.{cs,vb}]
# Organize usings
dotnet_sort_system_directives_first = true
# this. preferences
dotnet_style_qualification_for_field = false:silent
dotnet_style_qualification_for_property = false:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_event = false:silent
# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:silent
dotnet_style_predefined_type_for_member_access = true:silent
# Parentheses preferences
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
# Modifier preferences
dotnet_style_require_accessibility_modifiers = never:warning
dotnet_style_readonly_field = true:suggestion
# Expression-level preferences
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:silent
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
###############################
# Naming Conventions          #
###############################
# Style Definitions
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_namespace_match_folder = true:warning
dotnet_style_allow_multiple_blank_lines_experimental = false:suggestion
dotnet_style_allow_statement_immediately_after_block_experimental = false:suggestion
dotnet_code_quality_unused_parameters = all:warning
###############################
# C# Coding Conventions       #
###############################
[*.cs]
# var preferences
csharp_style_var_for_built_in_types = false:warning
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = true:silent
# Expression-bodied members
csharp_style_expression_bodied_methods = true:suggestion
csharp_style_expression_bodied_constructors = true:suggestion
csharp_style_expression_bodied_operators = true:suggestion
csharp_style_expression_bodied_properties = true:suggestion
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent
# Pattern matching preferences
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
# Null-checking preferences
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion
# Modifier preferences
csharp_preferred_modifier_order = public, private, protected, internal, file, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, required, volatile, async:warning
# Expression-level preferences
csharp_prefer_braces = true:warning
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
###############################
# C# Formatting Rules         #
###############################
# New line preferences
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true
# Indentation preferences
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left
# Space preferences
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
# Wrapping preferences
csharp_preserve_single_line_statements = true
csharp_preserve_single_line_blocks = true
csharp_using_directive_placement = outside_namespace:warning
csharp_prefer_simple_using_statement = true:warning
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent
csharp_style_prefer_primary_constructors = true:suggestion
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent
csharp_style_prefer_null_check_over_type_check = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_local_over_anonymous_function = true:suggestion
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_prefer_tuple_swap = true:suggestion
csharp_style_prefer_utf8_string_literals = true:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:silent
csharp_style_unused_value_assignment_preference = discard_variable:warning
csharp_prefer_static_local_function = true:suggestion
csharp_style_prefer_readonly_struct_member = true:suggestion
csharp_style_prefer_readonly_struct = true:suggestion
csharp_style_allow_embedded_statements_on_same_line_experimental = true:silent
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = false:suggestion
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = false:suggestion
csharp_style_allow_blank_line_after_token_in_conditional_expression_experimental = false:suggestion
csharp_style_allow_blank_line_after_token_in_arrow_expression_clause_experimental = false:suggestion
csharp_style_prefer_pattern_matching = true:silent
csharp_style_prefer_switch_expression = true:suggestion
csharp_style_prefer_not_pattern = true:suggestion
csharp_style_prefer_extended_property_pattern = true:suggestion

[*.{appxmanifest,asax,ascx,aspx,axaml,build,c,c++,cc,cginc,compute,cp,cpp,cppm,cs,cshtml,cu,cuh,cxx,dtd,fs,fsi,fsscript,fsx,fx,fxh,h,hh,hlsl,hlsli,hlslinc,hpp,hxx,inc,inl,ino,ipp,ixx,master,ml,mli,mpp,mq4,mq5,mqh,paml,razor,resw,shader,skin,tpp,usf,ush,vb,xaml,xamlx,xoml,xsd}]
indent_size = 4
tab_width = 4
dotnet_style_prefer_collection_expression = true:suggestion
# Types that own disposable fields should be disposable
dotnet_diagnostic.ca1001.severity = warning
# Provide ObsoleteAttribute message
dotnet_diagnostic.ca1041.severity = warning
# Implement IDisposable correctly
dotnet_diagnostic.ca1063.severity = warning
# Avoid using cref tags with a prefix
dotnet_diagnostic.ca1200.severity = suggestion
# Specify CultureInfo
dotnet_diagnostic.ca1304.severity = warning
# Specify StringComparison for correctness
dotnet_diagnostic.ca1310.severity = suggestion
# Specify a culture or use an invariant version
dotnet_diagnostic.ca1311.severity = warning
# Do not initialize unnecessarily
dotnet_diagnostic.ca1805.severity = warning
# Call GC.SuppressFinalize correctly
dotnet_diagnostic.ca1816.severity = warning
# Do not use Count()/LongCount() when Any() can be used
dotnet_diagnostic.ca1827.severity = warning
# Do not use CountAsync/LongCountAsync when AnyAsync can be used
dotnet_diagnostic.ca1828.severity = warning
# Use Length/Count property instead of Enumerable.Count method
dotnet_diagnostic.ca1829.severity = warning
# Use StartsWith instead of IndexOf
dotnet_diagnostic.ca1858.severity = warning
# Use concrete types when possible for improved performance
dotnet_diagnostic.ca1859.severity = warning
# Dispose objects before losing scope
dotnet_diagnostic.ca2000.severity = warning
# Instantiate argument exceptions correctly
dotnet_diagnostic.ca2208.severity = warning
# Non-constant fields should not be visible
dotnet_diagnostic.ca2211.severity = warning
# Disposable fields should be disposed
dotnet_diagnostic.ca2213.severity = warning
# Dispose methods should call base class dispose
dotnet_diagnostic.ca2215.severity = warning
# Consider using String.Contains instead of String.IndexOf
dotnet_diagnostic.ca2249.severity = warning
# Template should be a static expression
dotnet_diagnostic.ca2254.severity = warning
# XmlCommentAnalysisDisabled
dotnet_diagnostic.sa0001.severity = none
# PrefixLocalCallsWithThis
dotnet_diagnostic.sa1101.severity = none
# ParameterMustNotSpanMultipleLines
dotnet_diagnostic.sa1118.severity = none
# UsingDirectivesMustBeQualified
dotnet_diagnostic.sa1135.severity = none
# ElementsMustAppearInTheCorrectOrder
dotnet_diagnostic.sa1201.severity = warning
# VariableNamesMustNotBePrefixed
dotnet_diagnostic.SA1308.severity = none
# FieldNamesMustNotBeginWithUnderscore
dotnet_diagnostic.sa1309.severity = none
# StaticReadonlyFieldsMustBeginWithUpperCaseLetter
dotnet_diagnostic.SA1311.severity = none
# AccessModifierMustBeDeclared
dotnet_diagnostic.sa1400.severity = none
# ArithmeticExpressionsMustDeclarePrecedence
dotnet_diagnostic.sa1407.severity = none
# BracesMustNotBeOmittedFromMultiLineChildStatement
dotnet_diagnostic.sa1519.severity = none
# ElementsMustBeDocumented
dotnet_diagnostic.sa1600.severity = none
# FileMustHaveHeader
dotnet_diagnostic.sa1633.severity = none

# Generated code
[{*{_AssemblyInfo.cs,.notsupported.cs,AsmOffsets.cs},{obj,bin}/*}]
generated_code = true
